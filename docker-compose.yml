version: '3.8'

services:
  # Database service
  db:
    image: postgres:14
    container_name: todo_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
      start_period: 30s

  # Backend service (FastAPI)
  backend:
    build: ./backend
    container_name: todo_backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      retries: 5
      timeout: 5s
      start_period: 10s

  # Frontend service (Vue.js + Vite)
  frontend:
    build: ./frontend
    container_name: todo_frontend
    environment:
      VITE_API_URL: http://backend:8000
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000"]
      interval: 30s
      retries: 5
      timeout: 5s
      start_period: 10s

# Named volumes for persistent data
volumes:
  postgres_data:

# Networks for communication between containers
networks:
  app-network:
    driver: bridge


# services:
#   db:
#     image: postgres:14
#     container_name: todo_db
#     restart: always
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
#       interval: 10s
#       retries: 5
#       timeout: 5s
#       start_period: 30s

#   backend:
#     build: ./backend
#     container_name: todo_backend
#     restart: always
#     image: ${DOCKERHUB_USERNAME}/todo_backend:latest
#     ports:
#       - "8000:8000"
#     depends_on:
#       db:
#         condition: service_healthy
#     volumes:
#       - ./backend:/app
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

#   frontend:
#     build: ./frontend
#     container_name: todo_frontend
#     restart: always
#     image: ${DOCKERHUB_USERNAME}/todo_frontend:latest
#     ports:
#       - "80:80"
#     environment:
#       VITE_API_URL: http://backend:8000
#     #volumes:
#     #  - ./frontend:/app
#     # - /app/node_modules
#     command: npm run preview -- --host 0.0.0.0 --port 80

# volumes:
#   postgres_data:
